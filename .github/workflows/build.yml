# .github\workflows\build.yml

name: build and test

on:
  workflow_dispatch:
    inputs:
      optionField:
        description: 'Log level'     
        required: true
        default: 'warning' 
        type: choice
        options:
        - info
        - warning
        - debug 
      booleanField:
        description: 'Test scenario tags'
        required: false 
        type: boolean
      environmentField:
        description: 'Environment to run tests against'
        type: environment
        required: true 
  push:
  pull_request:
    branches: [ main ]
    paths-ignore:
    - '**.md'

env:
  DOTNET_VERSION: '6.0.x'
  AZURE_WEBAPP_NAME: demo-ghworkflowactions
  AZURE_WEBAPP_PACKAGE_PATH: '.'

jobs:
  build-and-test:
    name: build-and-test-${{matrix.os}}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    
    - name: Setup dotnet
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    
    - name: Set up dependency caching for faster builds
      uses: actions/cache@v3
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
        restore-keys: |
          ${{ runner.os }}-nuget-
    
    - name: Install dependencies
      run: dotnet restore
      working-directory: src/demo-webapp
    
    - name: Build
      run: dotnet build --configuration Release --no-restore
      working-directory: src/demo-webapp

    - name: Test
      run: dotnet test --no-restore --verbosity normal
      working-directory: src/demo-webapp-test
    
    - name: Testing Report
      uses: zyborg/dotnet-tests-report@v1
      with:
        project_path: src/demo-webapp-test/demo-webapp-test.csproj
        report_name: demo-webapp-test-report
        report_title: Demo Webapp Test Report
        github_token: ${{ secrets.GITHUB_TOKEN }}

    - name: Publish
      run: dotnet publish -c Release -o ${{env.DOTNET_ROOT}}/demo-webapp-release
      working-directory: src/demo-webapp

    - name: Upload artifact for deployment job
      uses: actions/upload-artifact@v3      
      with:
        name: .net-app
        path: ${{env.DOTNET_ROOT}}/demo-webapp-release
    
    - name: chuck-norris-quote-action-html
      id: htmlchuck
      uses: glav/chuck-norris-quote@v1.0

  deploy-dev:
    environment:
      name: 'Development'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    runs-on: ubuntu-latest    
    needs: build-and-test  
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: .net-app

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
          slot-name: dev

      - name: 'Login via Azure CLI'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set Web App Settings
        uses: Azure/appservice-settings@v1
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          app-settings-json: |
            [
              {
                  "name": "MyAppSettingConiguration1",
                  "value": "Development",
                  "slotSetting": false
              }
            ]
          slot-name: dev

      # To use this repository's private action,
      # you must check out the repository          
      - uses: actions/checkout@v3

      - name: Site warm up
        id: warmup        
        uses: ./.github/actions/site-warmup-action
        with:
          authentication-token: ${{ secrets.WEBAPP_BEARER_AUTHENTICATION_TOKEN }}
          url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

      - name: Get the output time
        run: echo "The response was ${{ steps.warmup.outputs.httpresponse }}"
      
  deploy-staging:
    environment:
      name: 'Staging'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    runs-on: ubuntu-latest    
    needs: build-and-test  
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: .net-app

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
          slot-name: staging

      - name: 'Login via Azure CLI'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set Web App Settings
        uses: Azure/appservice-settings@v1
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          app-settings-json: |
            [
             {
                 "name": "MyAppSettingConiguration1",
                 "value": "staging",
                 "slotSetting": false
             }
            ]
          slot-name: staging

      # To use this repository's private action,
      # you must check out the repository          
      - uses: actions/checkout@v3

      - name: Site warm up
        id: warmup        
        uses: ./.github/actions/site-warmup-action
        with:
          authentication-token: ${{ secrets.WEBAPP_BEARER_AUTHENTICATION_TOKEN }}
          url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

      - name: Get the output time
        run: echo "The response was ${{ steps.warmup.outputs.httpresponse }}"

  deploy-production:
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    runs-on: ubuntu-latest    
    needs: deploy-staging
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: .net-app

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
          slot-name: production

      - name: 'Login via Azure CLI'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set Web App Settings
        uses: Azure/appservice-settings@v1
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          app-settings-json: |
           [
             {
                 "name": "MyAppSettingConiguration1",
                 "value": "production",
                 "slotSetting": false
             }
            ]
          slot-name: production

      # To use this repository's private action,
      # you must check out the repository          
      - uses: actions/checkout@v3
      
      - name: Site warm up
        id: warmup        
        uses: ./.github/actions/site-warmup-action
        with:
          authentication-token: ${{ secrets.WEBAPP_BEARER_AUTHENTICATION_TOKEN }}
          url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
      
      - name: Get the output time
        run: echo "The response was ${{ steps.warmup.outputs.httpresponse }}"